class PublicationKeyword
types
public KeywordName = seq of char;
public FieldOfStudyID= nat;

values

	
instance variables

	private pid : Publication`PublicationID := 1;
	private fosid: FieldOfStudy`FieldOfStudyID:= 1;
	private keyword: KeywordName := [];
operations

public PublicationKeyword : Publication`PublicationID * FieldOfStudy`FieldOfStudyID *
														KeywordName  ==> PublicationKeyword
		PublicationKeyword(id, fid, kw) ==
		(
		pid := id;
		fosid := fid;
		keyword := kw;
		return self;		
		);
		
		public changeKeyword: KeywordName ==> ()
	changeKeyword(kw) ==
	keyword :=  kw;
	
	pure public getPid: () ==> Publication`PublicationID
		getPid() == return pid;
		
	pure public getFosid: () ==> FieldOfStudy`FieldOfStudyID
		getFosid() == return fosid;
		
	pure public getKeyword: () ==> KeywordName
		getKeyword() == return keyword;

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end PublicationKeyword