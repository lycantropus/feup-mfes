class TestIndexer is subclass of MyTestCase

operations
-- TODO Define operations here


	public testAffiliation: () ==> ()
		testAffiliation() ==
		(dcl af: Affiliation := new Affiliation("FEUP");
		assertEqual("FEUP", af.getName());
		);
		
		public testAffiliationChangeName: () ==> ()
		testAffiliationChangeName() ==
		(dcl af: Affiliation := new Affiliation("FEUP");
		assertEqual("FEUP", af.getName());
		af.changeName("MIT");
		assertEqual("MIT", af.getName());
		);



  public testAuthor: () ==> ()
  testAuthor() == (
  	dcl a: Author := new Author("Andre", {"amputacoes", "desmembramentos"});
  	assertEqual("Andre", a.getName());
  	assertEqual({"amputacoes", "desmembramentos"}, a.getInterests());
  );




	public testAuthorChangeName: () ==> ()
		testAuthorChangeName() ==
		(dcl a: Author := new Author("Andre", {"amputacoes", "desmembramentos"});
		assertEqual("Andre", a.getName());
  	a.changeName("Banana");
  	assertEqual("Banana", a.getName());
  	);
  	
  public testAddInterestsAuthor: () ==> ()
  testAddInterestsAuthor() ==
  (dcl a: Author := new Author("Andre", {"amputacoes", "desmembramentos"});
  	assertEqual({"amputacoes", "desmembramentos"}, a.getInterests());
  	a.addInterests({"mutilaçoes", "imolaçoes"});
  	assertEqual({"amputacoes", "desmembramentos", "mutilaçoes", "imolaçoes"}, a.getInterests());
  	);
  	
  	public testRemoveInterestsAuthor: () ==> ()
  testRemoveInterestsAuthor() ==
  (dcl a: Author := new Author("Andre", {"amputacoes", "desmembramentos"});
  	assertEqual({"amputacoes", "desmembramentos"}, a.getInterests());
  	a.removeInterests({"amputacoes"});
  	assertEqual({"desmembramentos"}, a.getInterests());
  	a.removeInterests({"desmembramentos"});
  	assertEqual({}, a.getInterests());
  	);
		

public testAll: () ==> ()
  testAll() == (
  	testAffiliation();
  	testAffiliationChangeName();
    testAuthor();
    testAuthorChangeName();
   testAddInterestsAuthor();
   testRemoveInterestsAuthor()
  );
  
end TestIndexer